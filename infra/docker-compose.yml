services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports: ["5433:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports: ["6379:6379"]

  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile.api
    environment:
      PYTHONPATH: /app/backend
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports: ["8000:8000"]
    volumes:
      - ../backend:/app/backend
      - ../etl:/app/etl
    restart: unless-stopped

  web:
    build:
      context: ..
      dockerfile: infra/Dockerfile.web
    environment:
      API_BASE_URL: ${API_BASE_URL}   # should be http://api:8000 inside Docker
    depends_on:
      - api
    ports: ["8050:8050"]
    volumes:
      - ../frontend:/app/frontend
    restart: unless-stopped

volumes:
  pgdata: {}
